<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PQM-WebApp</name>
    </assembly>
    <members>
        <member name="M:PQM_WebApp.Controllers.AgeGroupsController.Get(System.Int32,System.Int32)">
            <summary>
            Get list of age groups
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Number of items per page</param>
            <returns></returns>
            <remarks>
            In case pageIndex = 0 and pageSize = MaxValue, the system will return all items
            </remarks>
        </member>
        <member name="M:PQM_WebApp.Controllers.AgeGroupsController.Create(PQM_WebApp.Data.ViewModels.AgeGroupCreateModel)">
            <summary>
            Create an AgeGroup
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.AgeGroupsController.Update(PQM_WebApp.Data.ViewModels.AgeGroupViewModel)">
            <summary>
            Update an AgeGroup
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.AgeGroupsController.Delete(PQM_WebApp.Data.ViewModels.AgeGroupViewModel)">
            <summary>
            Delete an AgeGroup
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.CategoryAliasesController">
            <summary>
            CRUD category alias
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.CategoryAliasesController.#ctor(PQM_WebApp.Service.ICategoryAliasService)">
            <summary>
            Constructor
            </summary>
            <param name="categoryAliasService"></param>
        </member>
        <member name="M:PQM_WebApp.Controllers.CategoryAliasesController.Get(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Get a list of category alias
            </summary>
            <param name="categoryId">Category ID. This parameter is optional</param>
            <param name="category">Category Name. This parameter is optional</param>
            <param name="pageIndex">Page Index. This parameter is optional</param>
            <param name="pageSize">Page Size. This parameter is optional</param>
            <returns></returns>
            <remarks>
            In case pageIndex = 0 and pageSize = MaxValue, the system will return all items
            </remarks>
        </member>
        <member name="M:PQM_WebApp.Controllers.CategoryAliasesController.Create(PQM_WebApp.Data.ViewModels.CategoryAliasCreateModel)">
            <summary>
            Create a category alias
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.CategoryAliasesController.Update(PQM_WebApp.Data.ViewModels.CategoryAliasViewModel)">
            <summary>
            Update a category alias
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.CategoryAliasesController.Delete(PQM_WebApp.Data.ViewModels.CategoryAliasViewModel)">
            <summary>
            Delete a category alias
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.GendersController">
            <summary>
            CRUD sex
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.GendersController.Get(System.Int32,System.Int32)">
            <summary>
            Get sexes
            </summary>
            <param name="pageIndex">Page Index</param>
            <param name="pageSize">Page Size</param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.GendersController.Create(PQM_WebApp.Data.ViewModels.GenderCreateModel)">
            <summary>
            Create a sex
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.GendersController.Update(PQM_WebApp.Data.ViewModels.GenderViewModel)">
            <summary>
            Update a sex
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.GendersController.Delete(PQM_WebApp.Data.ViewModels.GenderViewModel)">
            <summary>
            Delete a sex
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.IndicatorGroupsController">
            <summary>
            CRUD indicator group
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorGroupsController.#ctor(PQM_WebApp.Service.IIndicatorGroupService)">
            <summary>
            Contructor
            </summary>
            <param name="indicatorGroupService"></param>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorGroupsController.Get(System.Int32,System.Int32)">
            <summary>
            Get indicator groups
            </summary>
            <param name="pageIndex">Page Index</param>
            <param name="pageSize">Page Size</param>
            <returns></returns>
            <remarks>
            In case pageIndex = 0 and pageSize = MaxValue, the system will return all items
            </remarks>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorGroupsController.Create(PQM_WebApp.Data.ViewModels.IndicatorGroupCreateModel)">
            <summary>
            Create an indicator group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorGroupsController.Update(PQM_WebApp.Data.ViewModels.IndicatorGroupViewModel)">
            <summary>
            Update an indicator group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorGroupsController.Delete(PQM_WebApp.Data.ViewModels.IndicatorGroupViewModel)">
            <summary>
            Delete an indicator group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorsController.Get(System.Int32,System.Int32)">
            <summary>
            Get indicators
            </summary>
            <param name="pageIndex">Page Index</param>
            <param name="pageSize">Page Size</param>
            <returns></returns>
            <remarks>
            In case pageIndex = 0 and pageSize = MaxValue, the system will return all items
            </remarks>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorsController.Create(PQM_WebApp.Data.ViewModels.IndicatorCreateModel)">
            <summary>
            Create an indicator
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorsController.Update(PQM_WebApp.Data.ViewModels.IndicatorViewModel)">
            <summary>
            Update an indicator
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.IndicatorsController.Delete(PQM_WebApp.Data.ViewModels.IndicatorViewModel)">
            <summary>
            Delete an indicator
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.KeyPopulationsController">
            <summary>
            CRUD key populations
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.KeyPopulationsController.#ctor(PQM_WebApp.Service.IKeyPopulationService)">
            <summary>
            Constructor
            </summary>
            <param name="keyPopulationService"></param>
        </member>
        <member name="M:PQM_WebApp.Controllers.KeyPopulationsController.Get(System.Int32,System.Int32)">
            <summary>
            Get key populations
            </summary>
            <param name="pageIndex">Page Index</param>
            <param name="pageSize">Page Size</param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.KeyPopulationsController.Create(PQM_WebApp.Data.ViewModels.KeyPopulationCreateModel)">
            <summary>
            Create a key population
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.KeyPopulationsController.Update(PQM_WebApp.Data.ViewModels.KeyPopulationViewModel)">
            <summary>
            Update a key population
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.KeyPopulationsController.Delete(PQM_WebApp.Data.ViewModels.KeyPopulationViewModel)">
            <summary>
            Delete a key population
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.LanguagesController">
            <summary>
            CRUD Language
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.LanguagesController.#ctor(PQM_WebApp.Service.ILanguageService)">
            <summary>
            Constructor
            </summary>
            <param name="languageService"></param>
        </member>
        <member name="M:PQM_WebApp.Controllers.LanguagesController.Languages(System.Int32,System.Int32)">
            <summary>
            Get languages
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns>List of languages with name and code (no dictionary)</returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LanguagesController.LanguageDetail(System.Guid)">
            <summary>
            Get language detail (with dictionary)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LanguagesController.CreateLanguage(PQM_WebApp.Data.ViewModels.LanguageCreateModel)">
            <summary>
            Create a language
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LanguagesController.UpdateLanguage(PQM_WebApp.Data.ViewModels.LanguageViewModel)">
            <summary>
            Update a language
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LanguagesController.DeleteLanguage(PQM_WebApp.Data.ViewModels.LanguageViewModel)">
            <summary>
            Delete a language
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.LocationsController">
            <summary>
            CRUD province, district and site
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.#ctor(PQM_WebApp.Service.ILocationService)">
            <summary>
            Constructor
            </summary>
            <param name="locationService"></param>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.Provinces(System.Int32,System.Int32)">
            <summary>
            Get provinces
            </summary>
            <param name="pageIndex">Page Index</param>
            <param name="pageSize">Page Size</param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.CreateProvince(PQM_WebApp.Data.ViewModels.ProvinceCreateModel)">
            <summary>
            Create a province
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.UpdateProvince(PQM_WebApp.Data.ViewModels.ProvinceModel)">
            <summary>
            Update a province
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.DeleteProvince(PQM_WebApp.Data.ViewModels.ProvinceModel)">
            <summary>
            Delete a province
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.Districts(System.String)">
            <summary>
            Get districts of a province
            </summary>
            <param name="provinceCode">Province Code</param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.CreateDistrict(PQM_WebApp.Data.ViewModels.DistrictCreateModel)">
            <summary>
            Create a district
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.UpdateDistrict(PQM_WebApp.Data.ViewModels.DistrictModel)">
            <summary>
            Update a district
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.DeleteDistrict(PQM_WebApp.Data.ViewModels.DistrictModel)">
            <summary>
            Delete a district
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.Sites(System.Guid)">
            <summary>
            Get sites
            </summary>
            <param name="districtId"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.CreateSite(PQM_WebApp.Data.ViewModels.SiteCreateModel)">
            <summary>
            Create a site
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.UpdateSite(PQM_WebApp.Data.ViewModels.SiteViewModel)">
            <summary>
            Update a site
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.LocationsController.DeleteSite(PQM_WebApp.Data.ViewModels.SiteViewModel)">
            <summary>
            Delete a site
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:PQM_WebApp.Controllers.SiteTypesController">
            <summary>
            CRUD site type
            </summary>
        </member>
        <member name="M:PQM_WebApp.Controllers.SiteTypesController.#ctor(PQM_WebApp.Service.ISiteTypeService)">
            <summary>
            Constructor
            </summary>
            <param name="siteTypeService"></param>
        </member>
        <member name="M:PQM_WebApp.Controllers.SiteTypesController.Get(System.Int32,System.Int32)">
            <summary>
            Get site types
            </summary>
            <param name="pageIndex">Page Index</param>
            <param name="pageSize">Page Size</param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.SiteTypesController.Create(PQM_WebApp.Data.ViewModels.SiteTypeCreateModel)">
            <summary>
            Create a site type
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.SiteTypesController.Update(PQM_WebApp.Data.ViewModels.SiteTypeViewModel)">
            <summary>
            Update a site type
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PQM_WebApp.Controllers.SiteTypesController.Delete(PQM_WebApp.Data.ViewModels.SiteTypeViewModel)">
            <summary>
            Delete a site type
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
    </members>
</doc>
